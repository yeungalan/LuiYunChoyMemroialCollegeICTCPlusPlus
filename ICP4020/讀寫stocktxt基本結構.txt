#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

struct Item{
	int recordnumber;
	char name[40];
	int itemnumber;
	char category[40];
	int quantity;
	float weight;
	char recipient[40];
	char finaldestination[40];
	char deliverystatus[40];
};

void ErrorHandler(char[],int);
void DocumentReader(char[255],struct Item dataArray[50],int *currentExistsRecordsNumber);
void DocumentWriter(char[255],struct Item dataArray[50]);
int chardatatypeschecking(char[]);

int AddNewItems(){
	system("CLS");
	struct Item Arr_Item[50] = {{0}};
	int currentExistsRecordsNumber;
	DocumentReader("stock.txt",Arr_Item,&currentExistsRecordsNumber);

	/* your code put here */
	
	DocumentWriter("stock.txt",Arr_Item);
}


int chardatatypeschecking(char chararray[]){
	int i = 0,AlphaCounter = 0,DigitCounter = 0,DotCounter = 0,SpaceCounter = 0;
	for(i=0;i<=strlen(chararray);i++){
		if(!isspace(chararray[i])){
			if(isalpha(chararray[i])){
				AlphaCounter = AlphaCounter + 1;
			}else if(isdigit(chararray[i])){
				DigitCounter = DigitCounter + 1 ;
			}else if(chararray[i] == '.'){
					DotCounter = DotCounter + 1;
			}
			
		}else{
			SpaceCounter = SpaceCounter + 1;
		}
	}
	//printf("%s / S%d / D%d / A%d / Digit%d\n",chararray,SpaceCounter,DotCounter,AlphaCounter,DigitCounter);
	if(DigitCounter == strlen(chararray)){
		return 1; //int
	}else if(DotCounter == 1 && DigitCounter == strlen(chararray) - 1){
		return 2; //float
	}else{
		return 3; //char
	}
};

void DocumentWriter(char filename[255],struct Item dataArray[50]){
	int i;
	FILE *outFILE;
	outFILE = fopen(filename,"w");
	for(i=0;i<50;i++){
		if(dataArray[i].recordnumber != '\0'){
			fprintf(outFILE,"%d\n",dataArray[i].recordnumber);
			fprintf(outFILE,"%s\n",dataArray[i].name);
			fprintf(outFILE,"%d\n",dataArray[i].itemnumber);
			fprintf(outFILE,"%s\n",dataArray[i].category);
			fprintf(outFILE,"%d\n",dataArray[i].quantity);
			fprintf(outFILE,"%.1f kg\n",dataArray[i].weight);
			fprintf(outFILE,"%s\n",dataArray[i].recipient);
			fprintf(outFILE,"%s\n",dataArray[i].finaldestination);
			fprintf(outFILE,"%s\n\n",dataArray[i].deliverystatus);
		}
		
	}
	
	fclose(outFILE);
}


void DocumentReader(char filename[255],struct Item dataArray[50],int *currentExistsRecordsNumber){
	int arrayCOUNTER = 0,characterCOUNTER = 0,characterPOSITION = 0;
	FILE *inFILE;
	inFILE = fopen(filename,"r");
	char ch,tmp[512];
	while((ch = fgetc(inFILE)) != EOF){
		if(ch == '\n'){
			switch(characterCOUNTER){
				case 0:
					dataArray[arrayCOUNTER].recordnumber = atoi(tmp);
					break;
				case 1:
					strcpy(dataArray[arrayCOUNTER].name,tmp);
					break;
				case 2:
					dataArray[arrayCOUNTER].itemnumber = atoi(tmp);
					break;
				case 3:
					strcpy(dataArray[arrayCOUNTER].category,tmp);
					break;
				case 4:
					dataArray[arrayCOUNTER].quantity = atoi(tmp);
					break;
				case 5:
					dataArray[arrayCOUNTER].weight = atof(tmp);
					break;
				case 6:
					strcpy(dataArray[arrayCOUNTER].recipient,tmp);
					break;
				case 7:
					strcpy(dataArray[arrayCOUNTER].finaldestination,tmp);
					break;
				case 8:
					strcpy(dataArray[arrayCOUNTER].deliverystatus,tmp);
					break;	
			}
			if(characterCOUNTER == 8){
				arrayCOUNTER += 1;
				characterCOUNTER = -1;
			}else{
				characterCOUNTER += 1;
			}
			characterPOSITION = 0;
			memset(tmp, 0, sizeof(tmp));
			
		}else{
			tmp[characterPOSITION] = ch;
			characterPOSITION += 1;
		}
		
	}
	fclose(inFILE);

	*currentExistsRecordsNumber = arrayCOUNTER;
}

void ErrorHandler(char message[512],int qut){
	system("color 4F");
	system("CLS");
	printf("============================================\n");
	printf("ERROR!!! Encountered error during execution.\n");
	printf("Description :%s\n",message);
	if(qut == 1){
		printf("PROGRAM TERMINATED. Press anykey to exit.\n",message);
	}else{
		printf("Press anykey to return.\n",message);
	}
	printf("============================================\n");
	system("@PAUSE");
	system("color 07");
	system("CLS");	
	if(qut == 1){
		exit(1);
	}
}